# -----------------------------------知识点-------------------------------------------
"""
********
1.异常的概念
    程序在运行时，如果 Python 解释器遇到到一个错误，会停止程序的执行，并且提示一些错误信息，这就是异常
2.捕获异常
     对某些代码的执行不能确定是否正确，可以增加 try(尝试) 来 捕获异常
     格式1:
         try:
            尝试执行的代码
         except:
            出现错误的处理

     不同类型的异常，并且需要针对不同类型的异常，做出不同的响应，这个时候，就需要捕获错误类型了
     捕获未知错误

    在开发时，要预判到所有可能出现的错误，还是有一定难度的,因此增加一个获取未知错误的 except
        except Exception as result:
            print("未知错误 %s" % result)

     格式2:
        try:
            # 尝试执行的代码
            pass
        except 错误类型1:
            # 针对错误类型1，对应的代码处理
            pass
        except (错误类型2, 错误类型3):
            # 针对错误类型2 和 3，对应的代码处理
            pass
        except Exception as result:
            print("未知错误 %s" % result)理

    完整与法:
        try:
            # 尝试执行的代码
            pass
        except 错误类型1:
            # 针对错误类型1，对应的代码处理
            pass
        except 错误类型2:
            # 针对错误类型2，对应的代码处理
            pass
        except (错误类型3, 错误类型4):
            # 针对错误类型3 和 4，对应的代码处理
            pass
        except Exception as result:
            # 打印错误信息
            print(result)
        else:
            # 没有异常才会执行的代码
            pass
        finally:
            # 无论是否有异常，都会执行的代码
            print("无论是否有异常，都会执行的代码")3.异常的传递
3. 异常的传递

    当 函数/方法 执行出现异常，会将异常传递给它的调用一方,如果,传递到主程序，仍然没有异常处理，程序才会被终止

4.抛出异常

    开发中，除了代码执行出错解释器会抛出异常之外.还可以根据应用程序特有的业务需求主动抛出异常
    1>.创建 一个 Exception 的 对象
    2>.使用 raise 关键字 抛出 异常对象

        ex = Exception("密码长度不够")    创建异常

********
"""


# -----------------------------------练习-------------------------------------------
print(" -----------------------------简单异常-----------------------------------")
try:
    # 提示用户输入一个数字
    num = int(input("请输入数字："))
except:
    print("请输入正确的数字")

print(" -----------------------------异常类型捕获-----------------------------------")
'''
需求
    提示用户输入一个整数
    使用 8 除以用户输入的整数并且输
'''
try:
    num = int(input("请输入整数："))
    result = 8 / num
    print(result)
except ValueError:
    print("请输入正确的整数")
except ZeroDivisionError:
    print("除 0 错误")

print(" -----------------------------抛出异常-----------------------------------")

def input_pwd():

    # 1.提示输入密码
    pwd = input("请输入密码:")

    # 2.判断密码的长度
    if len(pwd) >= 8:
        return pwd      # 如果条件满足,返回结果不在向下执行
    else:
        raise Exception("输入的密码长度最少8位")  # 抛出错误

try:
    input_pwd()
except Exception as result:
    print("发现错误:%s" %result)
