# ----------------------------------------知识点------------------------------------------------------
'''
********if 和 while 条件后面都有:(冒号)********
循环的作用就是让指定的代码重复的执行
1. while 语句基本语法(while语句以及缩进部分是一个完整的代码块****)
    语法格式:

    初始条件设置 —— 通常是重复执行的 计数器
    while 条件(判断 计数器 是否达到 目标次数):
        条件满足时，做的事情1
        条件满足时，做的事情2
        条件满足时，做的事情3
        ...(省略)...

        处理条件(计数器 + 1)
2. break 和 continue
    - break 某一条件满足时，退出当前循环，不再执行后续重复的代码
    - continue 某一条件满足时，不执行后续重复的代码,直接进行下一次循环

3.  while 循环嵌套
    语法格式:
    while 条件 1:
        条件满足时，做的事情1
        条件满足时，做的事情2
        条件满足时，做的事情3
        ...(省略)...

        while 条件 2:
            条件满足时，做的事情1
            条件满足时，做的事情2
            条件满足时，做的事情3
            ...(省略)...

            处理条件 2

        处理条件 1

4. 字符串中的转义字符
    - \t    制表符，协助在输出文本时 垂直方向 保持对齐
    - \n    换行符
    - \r    换行
    - \\    \(反斜杠)
    - \'    '(单引号)
    - \"    "(双引号)
'''
# ----------------------------------------练习------------------------------------------------------
'''
需求
- 打印 5 遍 Hello Python
'''
print("------------------------------------------------------------")
# while语句,后面的缩进部分为一个整体
i = 0  # 设置初始条件 (应该尽量养成习惯：除非需求的特殊要求，否则循环的计数都从 0 开始)

while i < 5:  # 判断条件满足则执行

    print("hello python")  # 循环体

    i += 1  # 条件处理


'''
需求
- 计算 0 ~ 100 之间所有数字的累计求和结果
计算 0 ~ 100 之间 所有 偶数 的累计求和结果
'''
print("------------------------------------------------------------")

i = 0
result = 0
while i <= 100:
    result += i
    i += 1

# 循环结束,输出结果  ---> ( %d 代表整数)
print("0到100所有数字的和为:%d" % result)

i = 0
result = 0
while i <= 100:
    if i % 2 == 0:
        result += i
    i += 1
# 循环结束,输出结果
print("0到100所有偶数的和为:%d" % result)

'''
需求
在控制台连续输出五行 *，每一行星号的数量依次递增
*
**
***
****
*****
'''
print("------------------------------------------------------------")

row = 1

while row <= 5:

    # 假设 python 没有提供字符串 * 操作
    # 在循环内部，再增加一个循环，实现每一行的 星星 打印
    col = 1

    while col <= row:
        print("*", end="")  # 打印完后不会自动换行
        col += 1

    # 每一行星号输出完成后，再增加一个换行
    print("")

    row += 1

'''
九九乘法表
需求 输出 九九乘法表，格式如下：
格式如下
1 * 1 = 1
1 * 2 = 2	2 * 2 = 4
1 * 3 = 3	2 * 3 = 6	3 * 3 = 9
1 * 4 = 4	2 * 4 = 8	3 * 4 = 12	4 * 4 = 16
1 * 5 = 5	2 * 5 = 10	3 * 5 = 15	4 * 5 = 20	5 * 5 = 25
1 * 6 = 6	2 * 6 = 12	3 * 6 = 18	4 * 6 = 24	5 * 6 = 30	6 * 6 = 36
1 * 7 = 7	2 * 7 = 14	3 * 7 = 21	4 * 7 = 28	5 * 7 = 35	6 * 7 = 42	7 * 7 = 49
1 * 8 = 8	2 * 8 = 16	3 * 8 = 24	4 * 8 = 32	5 * 8 = 40	6 * 8 = 48	7 * 8 = 56	8 * 8 = 64
1 * 9 = 9	2 * 9 = 18	3 * 9 = 27	4 * 9 = 36	5 * 9 = 45	6 * 9 = 54	7 * 9 = 63	8 * 9 = 72	9 * 9 = 81
'''
print("------------------------------------------------------------")

row = 1

while row <= 9:

    col = 1

    while col <= row:
        print("%d * %d = %d" % (col, row, col * row), end="   ")
        col += 1

    print("")

    row += 1
