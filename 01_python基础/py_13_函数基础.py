# -*- coding: UTF-8 -*-
# ----------------------------------------知识点------------------------------------------------------
'''
1. 定义函数的格式如下：(由于函数是一个比较独立的模块,因此定义函数名上方最好保留两个空行)
    def 函数名():
        函数封装的代码
        ……
    1. def 是英文 define 的缩写
    2. 函数名称 应该能够表达函数封装代码的功能，方便后续的调用
    3. 函数名称 的命名应该 符合 标识符的命名规则
       - 可以由 字母、下划线 和 数字 组成
       - 不能以数字开头
       - 不能与关键字重名

2. 函数的文档注释
    - 在开发中，如果希望给函数添加注释，应该在定义函数的下方，使用连续的三对引号
    - 在连续的三对引号之间编写对函数的说明文字
    - 在函数调用位置，使用快捷键 CTRL + SHIFT + 空格 可以查看函数的说明信息

    注意：因为 函数体相对比较独立，函数定义的上方，应该和其他代码（包括注释）保留两个空行

3. 函数参数的使用
    - 在函数名的后面的小括号内部填写 参数(不用填写参数类型)
    - 多个参数之间使用 , 分隔
        形参：定义函数时，小括号中的参数，是用来接收参数用的，在函数内部 作为变量
        实参：调用函数时，小括号中的参数，是用来把数据传递到函数内部用的

4. 函数的返回值
    - 在程序开发中，有时候，会希望一个函数执行结束后，告诉调用者一个结果，以便调用者针对具体的结果做后续的处理
    - 返回值是函数完成工作后，最后给调用者的一个结果
    - 在函数中使用 return 关键字可以返回结果
    - 调用函数一方，可以使用变量来 收函数的返回结果
    注意：return 表示返回，后续的代码都不会被执行

5. 使用模块中的函数
    - 模块就好比是工具包，要想使用这个工具包中的工具，就需要导入 import 这个模块
    - 每一个以扩展名 py 结尾的 Python 源代码文件都是一个模块
    - 在模块中定义的全局变量 、函数都是模块能够提供给外界直接使用的工具
    #调用其他模块(py文件)下的函数或者变量应该先将文件引入(import)
        Pyc 文件（了解）
        浏览程序目录会发现一个_pycache_的目录,里面存在的pyc文件是由Python解释器导入的模块转换成的字节码文件
'''
# ----------------------------------------练习------------------------------------------------------

name = "小明"


# 由于函数是一个比较独立的模块,因此定义函数名上方最好保留两个空行


def say_hello():
    """打招呼(进行函数的注释)"""
    print("hello 1")
    print("hello 2")
    print("hello 3")


print(name)
# 只有在调用函数时，之前定义的函数才会被执行
# 函数执行完成之后，会重新回到之前的程序中，继续执行后续的代码
say_hello()

print(name)

print("---------------------------------------------------------------------------")


def my_sum(num1, num2):
    sum1 = num1 + num2
    return sum1


# my_sum(4,87)
print("%d" % my_sum(2, 89))

print("---------------------------------------------------------------------------")


def print_line(char):  # 这样定义的形参
    print("哈哈,中间有个函数")
    print(char * 50)  # 说明此实参只能为字符串或者数字


print_line("-")
