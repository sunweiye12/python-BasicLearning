# -----------------------------------知识点-------------------------------------------
"""
1.类是对一群具有相同特征或者行为的事物的一个统称，是抽象的，不能直接使用
    特征 被称为 属性
    行为 被称为 方法
2.对象是由类创建出来的一个具体存在，可以直接使用由哪一个类创建出来的对象，就拥有在哪一个类中定义的：属性,方法
3.类和对象的关系(类的命名采用大驼峰法命名)
    1>.类是模板，对象是根据类这个模板创建出来的，应该先有类，再有对象
    2>.类只有一个，而对象可以有很多个   不同的对象之间属性可能会各不相同
    3>.类中定义了什么属性和方法，对象中就有什么属性和方法，不可能多，也不可能少
"""


#  定义一个类
class Cat:
    int = 1  # 设置类的属性

    def eat(self):  # 设置类的方法
        print("小猫爱吃鱼")

    def drink(self):
        print("小猫要喝水")


if __name__ == '__main__':

    # 创建猫对象
    tom = Cat()
    tom.eat()
    tom.drink()

    # 使用 print 输出对象变量，默认情况下，是能够输出这个变量引用的对象是由哪一个类创建的对象，以及对象在内存中的地址（十六进制表示）
    print(tom)

    addr = id(tom)  # 获取对象的内存地址
    print("%x" % addr)
