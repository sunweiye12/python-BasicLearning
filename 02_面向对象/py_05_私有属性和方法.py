# -----------------------------------知识点-------------------------------------------
"""
应用场景
    在实际开发中，对象 的 某些属性或方法 可能只希望 在对象的内部被使用，而 不希望在外部被访问到
    私有属性 就是 对象 不希望公开的 属性
    私有方法 就是 对象 不希望公开的 方法
    私有方法不可以被继承

定义方式
    在定义属性或方法时，在属性名或者方法名前增加两个下划线，定义的就是私有属性或方法

****Python 中，并没有 真正意义的私有
    在给 属性、方法 命名时，实际是对名称做了一些特殊处理，使得外界无法访问到
    处理方式：在名称前面加上 _类名 => _类名__名称
"""


# -----------------------------------练习-------------------------------------------

class Women:

    def __init__(self, name):
        self.name = name
        # 定义为私有属性(不要问女生的年龄)
        self.__age = 18

    # 定义为私有方法
    def __secret(self):
        print("我的年龄是 %d" % self.__age)

if __name__ == '__main__':

    xiaofang = Women("小芳")

    print(xiaofang.name)  # 公共属性可以访问
    # print(xiaofang.__age)    # 私有属性，外部不能直接访问
    print(xiaofang._Women__age)  # 强制访问私有属性(非常不建议使用)

    # 私有方法，外部不能直接调用
    # xiaofang.__secret()
