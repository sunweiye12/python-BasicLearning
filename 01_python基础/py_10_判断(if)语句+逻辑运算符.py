# -*- coding: UTF-8 -*-
# ----------------------------------------知识点------------------------------------------------------
'''
1.在 Python 中，if 语句 就是用来进行判断的，
    格式如下：
    if 要判断的条件:
        条件成立时，要做的事情
        ……
    else:
        条件不成立时，要做的事情
        ……
注意：代码的缩进为一个 tab 键，或者 4 个空格 —— 建议使用空格
      ****在 Python 开发中，Tab 和空格不要混用！

2.逻辑运算符 包括：与 and,或 or,非 not 三种
    - and
        两个条件同时满足，返回 True
        只要有一个不满足，就返回 False
    - or
        两个条件只要有一个满足，返回 True
        两个条件都不满足，返回 False
    - not
        原来的结果取反
    - ==
        相等

3. if 语句进阶
        1.elif的使用(相当于swich语句)
        - 在开发中，使用 if 可以判断条件
        - 使用 else 可以处理 条件不成立的情况
        - 但是，如果希望 再增加一些条件，条件不同，需要执行的代码也不同时，就可以使用elif
            语法格式如下：
            if 条件1:
                条件1满足执行的代码
                ……
            elif 条件2:
                条件2满足时，执行的代码
                ……
            elif 条件3:
                条件3满足时，执行的代码
                ……
            else:
                以上条件都不满足时，执行的代码
                ……
        注意
            1. elif 和 else 都必须和 if 联合使用，而不能单独使用
            2. 可以将 if、elif 和 else 以及各自缩进的代码，看成一个 完整的代码块

    2.if的嵌套
        语法格式如下：
        if 条件 1:
            条件 1 满足执行的代码
            ……
            if 条件 1 基础上的条件 2:
                条件 2 满足时，执行的代码
                ……
            else:
                条件 2 不满足时，执行的代码
        else:
            条件1 不满足时，执行的代码
            ……


'''

# ----------------------------------------练习------------------------------------------------------
'''
需求

1. 输入用户年龄
2. 判断是否满 18 岁 （>=）
3. 如果满 18 岁，允许进网吧嗨皮
4. 如果未满 18 岁，提示回家写作业
'''
# 键盘输入(此处进行了类型转换)
age = int(input("请输入您的年龄:"))
# 判断条件
if age >= 18:
    print("允许进网吧嗨皮")
else:
    print("还是回家写作业吧!!")

'''

elif 演练 —— 女友的节日
需求

1. 定义 holiday_name 字符串变量记录节日名称
2. 如果是 情人节 应该 买玫瑰／看电影
3. 如果是 平安夜 应该 买苹果／吃大餐
4. 如果是 生日 应该 买蛋糕
5. 其他的日子每天都是节日啊……

'''
print("----------------------------------------------------------------------------")
holiday_name = input("请输入今天的节日:")  # "情人节"

if holiday_name == "情人节":
    print("应该买玫瑰/看电影")
elif holiday_name == "平安夜":
    print("应该买苹果／吃大餐")
elif holiday_name == "生日":
    print("应该 买蛋糕")
else:
    print("日子每天都是节日啊……")

'''
if 的嵌套 演练 —— 火车站安检

需求
1. 定义布尔型变量 has_ticket 表示是否有车票
2. 定义整型变量 knife_length 表示刀的长度，单位：厘米
3. 首先检查是否有车票，如果有，才允许进行 安检
4. 安检时，需要检查刀的长度，判断是否超过 20 厘米
   - 如果超过 20 厘米，提示刀的长度，不允许上车
   - 如果不超过 20 厘米，安检通过
5. 如果没有车票，不允许进门
'''
print("----------------------------------------------------------------------------")
has_ticket = True  # True和False首字母必须大写
knife_length = 15

if has_ticket == True:
    print("进入安检")
    if knife_length > 20:
        print("您携带的刀的长度为%scm，不允许上车" % knife_length)
    else:
        print("安检通过,祝您路途愉快")
else:
    print("没有车票，不允许进入 ")

'''
综合应用 —— 石头剪刀布
目标
1. 强化 多个条件 的 逻辑运算
2. 体会 import 导入模块（“工具包”）的使用

需求
1. 从控制台输入要出的拳 —— 石头（1）／剪刀（2）／布（3）
2. 电脑 随机 出拳 —— 先假定电脑只会出石头，完成整体代码功能
3. 比较胜负
'''
print("----------------------------------------------------------------------------")
import random  # 导入包

computer = random.randint(1, 3)  # 调用random包中的randint(A,B)函数,返回A到B的整数,包括A和B（******）

my_num = int(input("输入要出的拳 —— 石头（1）,剪刀（2）,布（3）"))

# 定义我赢的情况
if (my_num == 1 and computer == 2) or (my_num == 2 and computer == 3) or (my_num == 3 and computer == 1):
    print("噢耶！！！电脑弱爆了！！！")
# 定义平局的情况
elif my_num == computer:
    print("心有灵犀，再来一盘！")
# 定义我输的情况
else:
    print("不行，我要和你决战到天亮！")
